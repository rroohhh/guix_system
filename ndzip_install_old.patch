diff --git a/CMakeLists.txt b/CMakeLists.txt
index 08cf61f..5656110 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -11,6 +11,7 @@ option(NDZIP_WITH_3RDPARTY_BENCHMARKS "Build third-party libraries for benchmark
 
 set(CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/cmake")
 include(SplitConfiguration)
+include(GNUInstallDirs)
 
 find_package(Boost REQUIRED COMPONENTS thread program_options)
 
@@ -123,7 +124,10 @@ target_split_configured_sources(ndzip PRIVATE
     ${NDZIP_PROFILE_CONFIGURATIONS}
 )
 
-target_include_directories(ndzip PUBLIC include)
+target_include_directories(ndzip PUBLIC 
+    $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
+    $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}/ndzip>
+)
 target_compile_definitions(ndzip PUBLIC
     -DNDZIP_HIPSYCL_SUPPORT=$<BOOL:${NDZIP_USE_HIPSYCL}>
     -DNDZIP_CUDA_SUPPORT=$<BOOL:${NDZIP_USE_CUDA}>
@@ -178,6 +182,14 @@ add_executable(compress
     src/compress/compress.cc
 )
 
+install(TARGETS ndzip compress EXPORT ndzip-config
+  LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
+  INCLUDES DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}
+  RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
+)
+install (EXPORT ndzip-config NAMESPACE ndzip:: DESTINATION share/ndzip/cmake)
+install (DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/include/ndzip/ DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/ndzip/)
+
 target_compile_options(compress PRIVATE ${NDZIP_CXX_FLAGS})
 target_link_libraries(compress PRIVATE ndzip io Boost::program_options)
 if (NDZIP_USE_HIPSYCL)
